#დავალება პირველი
#1. str
print("hello") #ტექსტური მონაცემი დაიბეჭდა რადგან ის იყო სტრინგში მოქცეული
#print(hello) #ამ შემთხვევაში იქნება შეცდომა (error) რადგან ტექსტური მონაცემი არ იყო სტრინგში ჩასმული
name = "hello world" 
print(name) #ცვლადის შემთხვევაში თუ ცვლადში ტექსტური მონაცემი ბრჭყალებშია ჩასმული, ტერმინალში ის უპრობლემოდ დაიბეჭდება
#num1 = input(enter name:) #ამ შემთხვევაში თუ მომხმარებელს ვთხოვთ რომ შემოიტანოს ნებისმიერი სახელი თუ რიცხვი, და ის არ არის სტრინგში მოთავსებული რათქმაუნდა ის არ იმუშავებს და ამოაგდებს ერრორს
#print(num1)

#2.int
print(5+5) #ამ შემთხვევაში კომპიუტერი მიხვდა, რომ ჩვენს მიერ  შეტანილი მონაცემი არის მთელი რიცხვი, ანუ ინტეჯერი და დაიბეჭდა ზუსტად ის მოქმედება რაც გვიწერია
num1 = 5 #პირველი ცვლადი
num2 = 10 #მეორე ცვლადი
print(num1 + num2) #ამ შემთხვევაშიც წარმატებით შესრულდა მოქმედება რადგან კომპიუტერი მიხვდა რომ ეს არის მთელი რიცხვი. ანუ ინტი და თუ გამოვიყენებდით სტრინგს უბრალოდ ის დაიბეჭდებოდა რაც პრინტში გვიწერია და არა მოქმედება
name1 = "50" #პირველი რიცხვითი ცვლადი რომელიც სტრინგშია
name2 = "100" #მეორე ცვლადი რომელიც სტრინგშია
print(name1 + name2) #ამ შემთხვევაში მოქმედება არ შესრულდება როგორც ჩვენ გვინდა, უბრალოდ ეს ორი მონაცემი შეერთდება და აღარ მოხდება მიმატება
name3 = input("enter number1 :") #მომხმარებელს შემოვაყვანინეთ პირველი რიცხვი
name4 = input("enter number2 :")#შემოვაყვანინეთ მეორე რიცხვი
print(name3 + name4)#ამ შემთხვევაში ჩვენი დაწერილი კოდი კი იმუშავებს მაგრამ აქაც არ მოხდება შეკრება რიცხვების, იმიტომრომ კომპიუტერმა მხოლოდ ის აღიქვა, რომ ეს მონაცემი სტრინგია და არა მთელი რიცხვი, ამიტომ უბრალოდ ერთმანეთი შეაერთა, 

#3.float
print(5.5) #როგორც დანარჩენი კომპიუტერი მიხვდა, რომ ეს არის float ფუნქცია ანუ ათწილადი, და დაიბეჭდა სუზტად ათწილადი
quest1 = 10.42
print(quest1) #ცვლადებშიც მიხვდა კომპიუტერი, რომ ჩვენ ათწილადი დავბეჭდეთ და გამოიყვანა ათწილადი.
name55 = input("pls enter float :") #აქ შემოიყვანს მომხმარებელი ათწილად რიცხვს
name56 = input("pls enter float2 :") # და აქ მეორე ათწილადს
print(name55 + name56) #ამ შემთხვევაშიც კომპიუტერი ვერ მიხვდა რომ ეს იყო ათწილადი და უბრალოდ ერთმანეთს გადააბა და არა შეკრიბა

#დავალება მეორე
user1 = int(input("please enter number1 :")) #აქ მომხმარებელი შემოიყვანს პირველ რიცხვს
user2 = int(input("please enter number2 :")) #აქ მომხმარებელი შემოიყვანს მეორე რიცხვს
user3 = int(input("please enter number3 :")) #აქ მომხმარებელი შემოიყვანს მესამე რიცხვს
user4 = int(input("please enter number4 :")) #აქ მომხმარებელი შემოიყვანს მეოთხე რიცხვს
user5 = int(input("please enter number5 :")) #აქ მომხმარებელი შემოიყვანს მეხუთე რიცხვს
print(user1 + user2 + user3 + user4 + user5) #მოხდება ჩვეულებრივად მიმატება რიცხვებში
print(user1 - user2 - user3 - user4 - user5) # აქ გამოკლება
print(user1 * user2 * user3 * user4 * user5) # აქ გამრავლება
print(user1 / user2 / user3 / user4 / user5) # აქ კი მოხდება ზუსტი გაყობა რადგან გვიწერია მხოლოდ ერთი /
print(user1 // user2 // user3 // user4 // user5) # ორი გაყოფის შემთხვევაში კი ხდება არაზუსტი გაყოფა
print(user1 % user2 % user3 % user4 % user5) # მათემატიკური გაყოფის დროს კი როდესაც % ნიშანს ვუწერთ უბრალოდ იწერება ნული და არ იყოფა
